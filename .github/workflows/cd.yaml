name: Kept CD

on:
  workflow_run:
    workflows: ["CI"]
    types: [completed]
    branches: [main]

permissions:
  id-token: write # Required for OIDC
  contents: read # Needed for actions/checkout

jobs:
  deploy-staging:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    environment: staging
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials via GitHub OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::950290770042:role/Kept-OIDC-GitHub-CD-Role
          aws-region: eu-west-2

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Deploy to staging and capture output
        id: deploy
        run: |
          DEPLOY_OUTPUT=$(npx sst@latest deploy --stage staging 2>&1)
          echo "Deployment output:"
          echo "$DEPLOY_OUTPUT"
          
          URL=$(echo "$DEPLOY_OUTPUT" | grep -oE 'https://[a-zA-Z0-9]+\.execute-api\.eu-west-2\.amazonaws\.com' | head -1)
          echo "api_url=$URL" >> $GITHUB_OUTPUT
          echo "Staging API URL: $URL"

      - name: Test staging endpoint
        run: |
          curl -f "${{ steps.deploy.outputs.api_url }}/healthz"
          echo "✅ Staging endpoint test passed"

  deploy-prod:
    needs: deploy-staging
    runs-on: ubuntu-latest
    environment: production
    if: github.ref == 'refs/heads/main'
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials via GitHub OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::950290770042:role/Kept-OIDC-GitHub-CD-Role
          aws-region: eu-west-2

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Deploy to production and capture output
        id: deploy
        run: |
          DEPLOY_OUTPUT=$(npx sst@latest deploy --stage prod 2>&1)
          echo "Deployment output:"
          echo "$DEPLOY_OUTPUT"
          
          URL=$(echo "$DEPLOY_OUTPUT" | grep -oE 'https://[a-zA-Z0-9]+\.execute-api\.eu-west-2\.amazonaws\.com' | head -1)
          echo "api_url=$URL" >> $GITHUB_OUTPUT
          echo "Production API URL: $URL"

      - name: Test production endpoint
        run: |
          curl -f "${{ steps.deploy.outputs.api_url }}/healthz"
          echo "✅ Production endpoint test passed"
